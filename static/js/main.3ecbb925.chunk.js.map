{"version":3,"sources":["components/CurrentWeather.js","components/DailyWeather.js","App.js","index.js"],"names":["cityName","CurrentWeather","props","getDataviaAxios","console","log","url","state","Axios","get","then","response","data","weather","main","humidity","temp","speed","wind","sortedItems","setState","curentWeatherData","getTemp","temp1","currentTemp","parseFloat","toFixed","bind","this","className","React","Component","DailyWeather","list","length","getWeatherData","dataItemList","items","forEach","item","dt_txt","includes","dataItem","date","getDayofWeek","temperature","push","newDate","split","dt","Date","getDay","dayName","getIcon","dayWeather","toLowerCase","fetch","json","map","index","App","cityInput","createRef","useState","setCityName","type","ref","placeholder","onClick","city","current","value","undefined","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3ecbb925.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nlet cityName = \"Canberra\";\r\nconst apiKey = \"0cf172e803d3e760c17228daccbd18a6\";\r\nconst units = \"metric\"; //show temperature in C\r\nclass CurrentWeather extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      curentWeatherData: [],\r\n      cityName: props.cityName,\r\n    };\r\n    console.log(\"cconstructor---\");\r\n\r\n    console.log(\"currentweather cityname:\", props.cityName);\r\n    // this.getData = this.getData.bind(this);\r\n    this.getDataviaAxios = this.getDataviaAxios.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.getData();\r\n    this.getDataviaAxios();\r\n  }\r\n\r\n\r\n  // shouldComponentUpdate(nextProps) {\r\n  //   console.log(\"1111:\", nextProps.key);\r\n  //   console.log(\"2222:\", this.state.key);\r\n  //   if (nextProps.cityName !== this.state.cityName) {\r\n\r\n  //     this.setState = {\r\n  //       cityName: nextProps.cityName\r\n  //     }\r\n  //     return true;\r\n  //   }\r\n  //   return false;\r\n  // }\r\n  // getData() {\r\n  //   fetch(url)\r\n  //     .then((response) => {\r\n  //       return response.json(); //this needs return, otherwise undefined\r\n  //     })\r\n  //     .then((data) => {\r\n  //       console.log(typeof data);\r\n  //       console.log(\"CurrentWeather------\");\r\n  //       console.log(data);\r\n  //       //current weather\r\n  //       const weather = data.weather[0].main;\r\n  //       console.log(weather);\r\n\r\n  //       const { humidity, temp } = data.main;\r\n  //       //currentTemp\r\n  //       // const temp = this.getTemp(data.main.temp);\r\n  //       console.log(temp); //get 00.0\r\n  //       //humidity\r\n  //       // const humidity = data.main.humidity;\r\n  //       console.log(humidity);\r\n  //       //wind speed\r\n  //       const speed = data.wind.speed;\r\n  //       console.log(speed);\r\n\r\n  //       let sortedItems = { temp, weather, humidity, speed };\r\n  //       this.setState({ curentWeatherData: sortedItems });\r\n  //     });\r\n  // }\r\n\r\n  getDataviaAxios = () => {\r\n    console.log(\"getData2-------\");\r\n    let url = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.cityName}&appid=${apiKey}&units=${units}`;\r\n\r\n    Axios.get(url).then((response) => {\r\n      // handle success\r\n      let data = response.data;\r\n      console.log(data);\r\n\r\n      const weather = data.weather[0].main;\r\n      console.log(weather);\r\n\r\n      const { humidity, temp } = data.main;\r\n      //currentTemp\r\n      // const temp = this.getTemp(data.main.temp);\r\n      console.log(temp); //get 00.0\r\n      //humidity\r\n      // const humidity = data.main.humidity;\r\n      console.log(humidity);\r\n      //wind speed\r\n      const speed = data.wind.speed;\r\n      console.log(speed);\r\n\r\n      let sortedItems = { temp, weather, humidity, speed };\r\n      this.setState({ curentWeatherData: sortedItems });\r\n    });\r\n  };\r\n\r\n  getTemp = (temp1) => {\r\n    // temp1=\"24.53\";\r\n    let temp = parseFloat(temp1);\r\n\r\n    let currentTemp = temp.toFixed(1);\r\n    console.log(\"temp : \" + currentTemp);\r\n    return currentTemp;\r\n  };\r\n\r\n\r\n\r\n\r\n  render() {\r\n    cityName = this.state.cityName;\r\n    // console.log(\"-------curentweather render, city:\" + cityName);\r\n    // console.log(url);\r\n    // this.getDataviaAxios();\r\n    return (\r\n      <div className=\"top-part  \">\r\n        <h3 className=\"city-location\" >\r\n          {cityName}\r\n        </h3>\r\n        <div className=\"today-detail\">\r\n          <div className=\"today-weather\">\r\n            <h2 className=\"today-temp\">{this.state.curentWeatherData.temp}Â°</h2>\r\n            <div className=\"today-temp1\">\r\n              {this.state.curentWeatherData.weather}\r\n            </div>\r\n          </div>\r\n          <div className=\"humidity-wind\">\r\n            <div className=\"humidity\">\r\n              <h4>HUMIDITY</h4>\r\n              <span>{this.state.curentWeatherData.humidity}%</span>\r\n            </div>\r\n            <span className=\"hw-seperated-line\"></span>\r\n            <div className=\"wind\">\r\n              <h4>WIND</h4>\r\n              <span>{this.state.curentWeatherData.speed}K/M</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default CurrentWeather;\r\n","import React from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nimport \"./DailyWeather.css\";\r\n\r\nimport {\r\n  WiRain,\r\n  WiThunderstorm,\r\n  WiDaySunny,\r\n  WiDayCloudy,\r\n} from \"react-icons/wi\";\r\n\r\nconst cityName = \"Canberra\";\r\nconst apiKey = \"0cf172e803d3e760c17228daccbd18a6\";\r\nconst units = \"metric\"; //show temperature in C\r\nconst url = `https://api.openweathermap.org/data/2.5/forecast?q=${cityName}&appid=${apiKey}&units=${units}`;\r\n\r\nclass DailyWeather extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataItemList: [],\r\n    };\r\n    // this.getData = this.getData.bind(this);\r\n    this.getDataviaAxios = this.getDataviaAxios.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    // this.getData();\r\n    this.getDataviaAxios();\r\n  }\r\n\r\n  getData() {\r\n    fetch(url)\r\n      .then((response) => {\r\n        return response.json(); //this needs return, otherwise undefined\r\n      })\r\n      .then((data) => {\r\n        // console.log(data);\r\n        console.log(typeof data);\r\n        console.log(\"length:\", data.list.length);\r\n        let sortedItems = this.getWeatherData(data.list);\r\n\r\n        this.setState({ dataItemList: sortedItems });\r\n      });\r\n  }\r\n\r\n\r\n  getDataviaAxios = () => {\r\n    console.log(\"getDataviaAxios-------:\");\r\n    Axios.get(url)\r\n      .then((response) => {\r\n        let data = response.data;\r\n        console.log(data);\r\n        console.log(\"length:\", data.list.length);\r\n        let sortedItems = this.getWeatherData(data.list);\r\n\r\n        this.setState({ dataItemList: sortedItems });\r\n\r\n      })\r\n  }\r\n\r\n  //format data to output style\r\n  getWeatherData = (list) => {\r\n    let items = [];\r\n    console.log(\"getWeatherData------:\", list);\r\n    list.forEach((item) => {\r\n      const { dt_txt } = item;\r\n      if (dt_txt.includes(\"00:00:00\")) {\r\n        console.log(dt_txt); //date 2021-09-04 00:00:00\r\n        console.log(\"----2--\");\r\n\r\n\r\n        const { main } = item.weather[0];\r\n        console.log(main); //weather Rain\r\n\r\n        const { temp } = item.main;\r\n        console.log(temp); //temp 24.53\r\n\r\n        const dataItem = [\r\n          { date: this.getDayofWeek(dt_txt) },\r\n          { weather: main },\r\n          { temperature: this.getTemp(temp) },\r\n        ];\r\n        items.push(dataItem);\r\n      }\r\n    });\r\n    return items;\r\n  };\r\n\r\n  getDayofWeek = (date) => {\r\n    // date = \"2021-09-04 00:00:00\";\r\n    let newDate = date.split(\" \");\r\n    let dt = new Date(newDate[0]);\r\n    console.log(\"getDay() : \" + dt.getDay());\r\n\r\n    let days = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"];\r\n    let dayName = days[dt.getDay()];\r\n    console.log(\"dayName() : \" + dayName);\r\n    return dayName;\r\n  };\r\n\r\n  getTemp = (temp1) => {\r\n    // temp1=\"24.53\";\r\n    let temp = parseFloat(temp1);\r\n\r\n    let currentTemp = temp.toFixed(1);\r\n    console.log(\"temp : \" + currentTemp);\r\n    return currentTemp;\r\n  };\r\n\r\n  getIcon = (weather) => {\r\n    console.log(\"weather : \" + weather);\r\n    let dayWeather = weather.toLowerCase();\r\n    console.log(\"weather2 : \" + dayWeather);\r\n    if (dayWeather.includes(\"rain\")) {\r\n      return <WiRain className=\"dayweather-icons\" />;\r\n    } else if (dayWeather.includes(\"sun\")) {\r\n      return <WiDaySunny className=\"dayweather-icons \" />;\r\n    } else if (dayWeather.includes(\"cloud\")) {\r\n      return <WiDayCloudy className=\"dayweather-icons \" />;\r\n    } else {\r\n      //default weather\r\n      return <WiThunderstorm className=\"dayweather-icons \" />;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"right-part\">\r\n        {this.state.dataItemList.map((item, index) => (\r\n          <div className=\"dayWeather\" key={index}>\r\n            <h3>{item[0].date}</h3>\r\n            {this.getIcon(item[1].weather)}\r\n            <h4>{item[2].temperature}Â° </h4>\r\n            {/* <h6>{item[1].weather} </h6> */}\r\n          </div>\r\n        ))}\r\n\r\n        {/* <div className=\"dayWeather\">\r\n          <h3>MON</h3>\r\n          <WiRaindrops className=\"dayweather-icons\" />\r\n          <h4>9Â°</h4>\r\n          <h6>RAINING</h6>\r\n        </div>\r\n        <div className=\"dayWeather \">\r\n          <h3>TUE</h3>\r\n          <WiDaySunny className=\"dayweather-icons \" />\r\n          <h4>15Â°</h4>\r\n          <h6>SUNNY</h6>\r\n        </div>\r\n        <div className=\"dayWeather  \">\r\n          <h3>WED</h3>\r\n          <WiDayCloudy className=\"dayweather-icons \" />\r\n          <h4>11Â°</h4>\r\n          <h6>CLOUDY</h6>\r\n        </div>\r\n        <div className=\"dayWeather  \">\r\n          <h3>THU</h3>\r\n          <WiThunderstorm className=\"dayweather-icons \" />\r\n          <h4>7Â°</h4>\r\n          <h6>STORM</h6>\r\n        </div>\r\n        <div className=\"dayWeather\">\r\n          <h3>FRI</h3>\r\n          <WiDaySunny className=\"dayweather-icons \" />\r\n          <h4>18Â°</h4>\r\n          <h6>SUNNY</h6>\r\n        </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default DailyWeather;\r\n","import \"./App.css\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { FaTwitter, FaCircle } from \"react-icons/fa\";\r\nimport { BsSearch, BsFillCaretRightFill } from \"react-icons/bs\";\r\n\r\nimport CurrentWeather from \"./components/CurrentWeather\";\r\nimport DailyWeather from \"./components/DailyWeather\";\r\n\r\n// import SideBarMenu from \"./components/SideBarMenu\";\r\n\r\nfunction App() {\r\n\r\n  let cityInput = React.createRef();\r\n  // let cityName = \"Canberra\";\r\n  const [cityName, setCityName] = useState(\"Canberra\");\r\n\r\n  function searchCityWeather() {\r\n    let city = cityInput.current.value;\r\n    console.log(\"search button clicks, city:\", city);\r\n    if (city !== undefined) {\r\n      // cityName = city;\r\n      setCityName(city);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"header\">\r\n        <BsSearch />\r\n        <input type=\"text\" ref={cityInput} placeholder=\"Search by city name\" />\r\n        <button type=\"button\" onClick={searchCityWeather}>Search</button>\r\n      </div>\r\n\r\n      <div className=\"container\">\r\n        {/* weather detail */}\r\n        <CurrentWeather cityName={cityName} />\r\n        {/* left twitter feed----- */}\r\n        <div className=\"botom-part\">\r\n          <div className=\"left-part\">\r\n            <div className=\"twitter-feed\">\r\n              <FaTwitter className=\"twitter-logo\" />\r\n              <h3>Twitter Feed </h3>\r\n              <span className=\"cityhashtag\">#{cityName}</span>\r\n            </div>\r\n\r\n            <div className=\"twitter-news\">\r\n              <div className=\"twitter-feed-words\">\r\n                <FaCircle className=\"grey-circle\" />\r\n                <p>Don't forget your sunscreen tomorrow! </p>\r\n              </div>\r\n              <div className=\"twitter-feed-words\">\r\n                <FaCircle className=\"grey-circle\" />{\" \"}\r\n                <p>Amazing weather in {cityName}!</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"next-div\">\r\n              <h4 className=\"next-text\">NEXT</h4>\r\n              <BsFillCaretRightFill className=\"next-arrow\" />\r\n            </div>\r\n          </div>\r\n\r\n\r\n          {/* weekly weather */}\r\n          <DailyWeather />\r\n\r\n          <div className=\"next-div\">\r\n            <h4 className=\"next-text\">NEXT</h4>\r\n            <BsFillCaretRightFill className=\"next-arrow\" />\r\n          </div>\r\n\r\n        </div>\r\n      </div></div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}
{"version":3,"sources":["components/weather/CurrentWeather.js","components/weather/DailyWeather.js","components/twitter/TwitterFeed.js","components/UI/SearchBar.js","App.js","index.js"],"names":["CurrentWeather","props","getDataviaAxios","cityName","process","url","Axios","get","then","response","data","console","log","sortedItems","temperature","main","temp","weather","humidity","speed","wind","setState","curentWeatherData","getTemp","temp1","parseFloat","toFixed","state","bind","this","prevProps","className","React","Component","DailyWeather","getWeatherData","list","dataItemList","items","forEach","item","dt_txt","includes","dataItem","date","getDayofWeek","push","newDate","split","dt","Date","getDay","dayName","currentTemp","getIcon","dayWeather","toLowerCase","map","index","TwitterFeed","SearchBar","useState","enteredTitle","setEnteredTitle","onSubmit","event","preventDefault","onSaveTitleData","action","type","value","onChange","e","target","placeholder","App","city","setCity","ReactDOM","render","document","getElementById"],"mappings":"0TA4GeA,E,kDAlGb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAuBRC,gBAAkB,WAChB,IAAIC,EA/BYC,WAgCV,EAAKH,MAAME,WACfA,EAAW,EAAKF,MAAME,UAGxB,IAAIE,EAAG,4DAAwDF,EAAxD,kBAnCIC,mCAmCJ,kBAlCGA,UAsCVE,IAAMC,IAAIF,GAAKG,MAAK,SAACC,GAEnB,IAAIC,EAAOD,EAASC,KACpBC,QAAQC,IAAIF,GAEZ,IAAIG,EAAc,CAChBC,YAAaJ,EAAKK,KAAKC,KACvBC,QAASP,EAAKO,QAAQ,GAAGF,KACzBG,SAAUR,EAAKK,KAAKG,SACpBC,MAAOT,EAAKU,KAAKD,OAMnB,EAAKE,SAAS,CAAEC,kBAAmBT,QAjDpB,EAqDnBU,QAAU,SAACC,GAMT,OAJWC,WAAWD,GAECE,QAAQ,IAvD/B,EAAKC,MAAQ,CACXL,kBAAmB,GACnBnB,SAAUF,EAAME,UAMlB,EAAKD,gBAAkB,EAAKA,gBAAgB0B,KAArB,gBAVN,E,qDAanB,WACEC,KAAK3B,oB,gCAGP,SAAmB4B,GAEbD,KAAK5B,MAAME,WAAa2B,EAAU3B,UAEpC0B,KAAK3B,oB,oBA4CT,WAME,OACE,sBAAK6B,UAAU,wBAAf,UACE,oBAAIA,UAAU,wBAAd,SACGF,KAAK5B,MAAME,WAEd,sBAAK4B,UAAU,wBAAf,UACE,sBAAKA,UAAU,wBAAf,UACE,qBAAIA,UAAU,sBAAd,UAAqCF,KAAKF,MAAML,kBAAkBR,YAAlE,UACA,qBAAKiB,UAAU,+BAAf,SACGF,KAAKF,MAAML,kBAAkBL,aAGlC,sBAAKc,UAAU,sBAAf,UACE,sBAAKA,UAAU,4BAAf,UACE,0CACA,iCAAOF,KAAKF,MAAML,kBAAkBJ,SAApC,UAEF,sBAAKa,UAAU,wBAAf,UACE,sCACA,iCAAOF,KAAKF,MAAML,kBAAkBH,MAApC,yB,GA3Fea,IAAMC,W,eCoIpBC,E,kDA3Hb,WAAYjC,GAAQ,IAAD,8BACjB,cAAMA,IAoBRC,gBAAkB,WAChB,IAAIC,EA3BYC,WA4BV,EAAKH,MAAME,WACfA,EAAW,EAAKF,MAAME,UAGxB,IAAIE,EAAG,6DAAyDF,EAAzD,kBA/BIC,mCA+BJ,kBA9BGA,UA+BVO,QAAQC,IAAI,4BAA6BP,GAEzCC,IAAMC,IAAIF,GAAKG,MAAK,SAACC,GACnB,IAAIC,EAAOD,EAASC,KACpBC,QAAQC,IAAI,QAASF,GAErB,IAAIG,EAAc,EAAKsB,eAAezB,EAAK0B,MAE3C,EAAKf,SAAS,CAAEgB,aAAcxB,IAE9BF,QAAQC,IAAI,eAAgBC,OAtCb,EA2CnBsB,eAAiB,SAACC,GAChB,IAAIE,EAAQ,GAyBZ,OAxBA3B,QAAQC,IAAI,wBAAyBwB,GACrCA,EAAKG,SAAQ,SAACC,GACZ,IAAQC,EAAWD,EAAXC,OACR,GAAIA,EAAOC,SAAS,YAAa,CAE/B/B,QAAQC,IAAI,UAAW6B,GAEvB,IAAQ1B,EAASyB,EAAKvB,QAAQ,GAAtBF,KACRJ,QAAQC,IAAIG,GAEZ,IAAQC,EAASwB,EAAKzB,KAAdC,KACRL,QAAQC,IAAII,GAEZ,IAAI2B,EACJ,CACEC,KAAM,EAAKC,aAAaJ,GACxBxB,QAASF,EACTD,YAAa,EAAKS,QAAQP,IAE5BsB,EAAMQ,KAAKH,OAIfhC,QAAQC,IAAI,6BAA8B0B,GACnCA,GArEU,EAwEnBO,aAAe,SAACD,GAEd,IAAIG,EAAUH,EAAKI,MAAM,KACrBC,EAAK,IAAIC,KAAKH,EAAQ,IAC1BpC,QAAQC,IAAI,cAAgBqC,EAAGE,UAE/B,IACIC,EADO,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACnCH,EAAGE,UAEtB,OADAxC,QAAQC,IAAI,eAAiBwC,GACtBA,GAjFU,EAoFnB7B,QAAU,SAACC,GAET,IACI6B,EADO5B,WAAWD,GACCE,QAAQ,GAE/B,OADAf,QAAQC,IAAI,UAAYyC,GACjBA,GAzFU,EA4FnBC,QAAU,SAACrC,GAET,IAAIsC,EAAatC,EAAQuC,cAEzB,OAAID,EAAWb,SAAS,QACf,cAAC,IAAD,CAAQX,UAAU,qBAChBwB,EAAWb,SAAS,OACtB,cAAC,IAAD,CAAYX,UAAU,sBACpBwB,EAAWb,SAAS,SACtB,cAAC,IAAD,CAAaX,UAAU,sBAGvB,cAAC,IAAD,CAAgBA,UAAU,uBAtGnC,EAAKJ,MAAQ,CACXU,aAAc,IAEhB,EAAKnC,gBAAkB,EAAKA,gBAAgB0B,KAArB,gBALN,E,qDAQnB,WACEC,KAAK3B,oB,gCAIP,SAAmB4B,GACbD,KAAK5B,MAAME,WAAa2B,EAAU3B,UACpC0B,KAAK3B,oB,oBA6FT,WAAU,IAAD,OACP,OACE,qBAAK6B,UAAU,sBAAf,SACGF,KAAKF,MAAMU,aAAaoB,KAAI,SAACjB,EAAMkB,GAAP,OAC3B,sBAAK3B,UAAU,sBAAf,UACE,6BAAKS,EAAKI,OACT,EAAKU,QAAQd,EAAKvB,SACnB,+BAAKuB,EAAK1B,YAAV,aAHwC4C,Y,GAjHzB1B,IAAMC,W,gBCXZ0B,G,wDACjB,WAAY1D,GAAQ,IAAD,6BACf,cAAMA,GACNU,QAAQC,IAAI,wBAAyBX,EAAME,UAF5B,E,0CAKnB,WACI,OACI,sBAAK4B,UAAU,qBAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,cAAC,IAAD,CAAWA,UAAU,uBACrB,+CACA,uBAAMA,UAAU,qBAAhB,eAAwCF,KAAK5B,MAAME,eAGvD,sBAAK4B,UAAU,qBAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,cAAC,IAAD,CAAUA,UAAU,gBACpB,0EAEJ,sBAAKA,UAAU,qBAAf,UACI,cAAC,IAAD,CAAUA,UAAU,gBACpB,oDAAuBF,KAAK5B,MAAME,SAAlC,aAIR,sBAAK4B,UAAU,WAAf,UACI,oBAAIA,UAAU,YAAd,kBACA,cAAC,IAAD,CAAsBA,UAAU,yB,GA5BXE,cC6B1B2B,EAhCG,SAAC3D,GACf,MAAwC4D,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAiBA,OACI,uBAAMhC,UAAU,cAAciC,SAXZ,SAACC,GAEnBtD,QAAQC,IAAI,8BACZqD,EAAMC,iBACNvD,QAAQC,IAAIkD,GAGZ7D,EAAMkE,gBAAgB,CAAEhE,SAAU2D,KAIqBM,OAAO,IAA9D,UACI,cAAC,IAAD,CAAUrC,UAAU,sBACpB,uBACIsC,KAAK,OACLC,MAAOR,EACPS,SArBgB,SAACC,GACzBT,EAAgBS,EAAEC,OAAOH,QAqBjBI,YAAY,wBAEhB,wBAAQL,KAAK,SAAb,wBCOGM,EA3BH,SAAC1E,GAEX,MAAwB4D,mBAAS,YAAjC,mBAAOe,EAAP,KAAaC,EAAb,KASA,OAEE,sBAAK9C,UAAU,eAAf,UACE,cAAC,EAAD,CAAWoC,gBAXS,SAACzD,GAEvBC,QAAQC,IAAI,iCAAkCF,GAG9CmE,EAAQnE,EAAKP,aAOX,0BAAS4B,UAAU,YAAnB,UACE,cAAC,EAAD,CAAgB5B,SAAUyE,IAE1B,sBAAK7C,UAAU,aAAf,UACE,cAAC,EAAD,CAAa5B,SAAUyE,IACvB,cAAC,EAAD,CAAczE,SAAUyE,cC1BlCE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.6578deaf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Axios from \"axios\";\r\nimport \"./CurrentWeather.css\";\r\n\r\nconst defaultCity = process.env.REACT_APP_CITY;\r\nconst apiKey = process.env.REACT_APP_APIKEY;\r\nconst units = process.env.REACT_APP_UNIT; //show temperature in C\r\n\r\n\r\nclass CurrentWeather extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      curentWeatherData: [],\r\n      cityName: props.cityName,\r\n    };\r\n    // console.log(\"cconstructor---defaultCity:\", defaultCity);\r\n\r\n    // console.log(\"currentweather cityname:\", this.state.cityName);\r\n    // console.log(\"currentweather props:\", props.cityName);\r\n    this.getDataviaAxios = this.getDataviaAxios.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getDataviaAxios();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n\r\n    if (this.props.cityName !== prevProps.cityName) {\r\n      // this.fetchData(this.props.userID);\r\n      this.getDataviaAxios();\r\n    }\r\n  }\r\n  getDataviaAxios = () => {\r\n    let cityName = defaultCity;\r\n    if (!!this.props.cityName) {//exists\r\n      cityName = this.props.cityName;\r\n    }\r\n\r\n    let url = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${apiKey}&units=${units}`\r\n    // console.log(\"getDataviaAxios--url----:\", url);\r\n\r\n\r\n    Axios.get(url).then((response) => {\r\n      // handle success\r\n      let data = response.data;\r\n      console.log(data);\r\n\r\n      let sortedItems = {\r\n        temperature: data.main.temp, //get 00.0\r\n        weather: data.weather[0].main,\r\n        humidity: data.main.humidity,\r\n        speed: data.wind.speed\r\n      };\r\n      // console.log(sortedItems)\r\n\r\n\r\n      // let sortedItems = { temp, weather, humidity, speed };\r\n      this.setState({ curentWeatherData: sortedItems });\r\n    });\r\n  };\r\n\r\n  getTemp = (temp1) => {\r\n    // temp1=\"24.53\";\r\n    let temp = parseFloat(temp1);\r\n\r\n    let currentTemp = temp.toFixed(1);\r\n    // console.log(\"temp : \" + currentTemp);\r\n    return currentTemp;\r\n  };\r\n\r\n\r\n\r\n\r\n  render() {\r\n    // cityName = this.state.cityName;\r\n    // console.log(\"render------\");\r\n    // console.log(this.state.curentWeatherData);\r\n    // console.log(url);\r\n    // this.getDataviaAxios();\r\n    return (\r\n      <div className=\"current_weather--main\">\r\n        <h3 className=\"current_weather--city\" >\r\n          {this.props.cityName}\r\n        </h3>\r\n        <div className=\"current_weather--body\">\r\n          <div className=\"current_weather--temp\">\r\n            <h2 className=\"current_weather--h2\">{this.state.curentWeatherData.temperature}Â°</h2>\r\n            <div className=\"current_weather--description\">\r\n              {this.state.curentWeatherData.weather}\r\n            </div>\r\n          </div>\r\n          <div className=\"current_weather--hw\">\r\n            <div className=\"current_weather--humidity\">\r\n              <h4>HUMIDITY</h4>\r\n              <span>{this.state.curentWeatherData.humidity}%</span>\r\n            </div>\r\n            <div className=\"current_weather--wind\">\r\n              <h4>WIND</h4>\r\n              <span>{this.state.curentWeatherData.speed}K/M</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default CurrentWeather;\r\n","import React from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nimport \"./DailyWeather.css\";\r\n\r\nimport {\r\n  WiRain,\r\n  WiThunderstorm,\r\n  WiDaySunny,\r\n  WiDayCloudy,\r\n} from \"react-icons/wi\";\r\n\r\n\r\nconst defaultCity = process.env.REACT_APP_CITY;\r\nconst apiKey = process.env.REACT_APP_APIKEY;\r\nconst units = process.env.REACT_APP_UNIT; //show temperature in C\r\n\r\nclass DailyWeather extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataItemList: [],\r\n    };\r\n    this.getDataviaAxios = this.getDataviaAxios.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getDataviaAxios();\r\n  }\r\n\r\n  // scheduleUpdate\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.cityName !== prevProps.cityName) {\r\n      this.getDataviaAxios();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  getDataviaAxios = () => {\r\n    let cityName = defaultCity;\r\n    if (!!this.props.cityName) {//exists\r\n      cityName = this.props.cityName;\r\n    }\r\n\r\n    let url = `https://api.openweathermap.org/data/2.5/forecast?q=${cityName}&appid=${apiKey}&units=${units}`\r\n    console.log(\"getDataviaAxios--url----:\", url);\r\n\r\n    Axios.get(url).then((response) => {\r\n      let data = response.data;\r\n      console.log(\"data:\", data);\r\n\r\n      let sortedItems = this.getWeatherData(data.list);\r\n\r\n      this.setState({ dataItemList: sortedItems });\r\n\r\n      console.log(\"sortedItems:\", sortedItems);\r\n    });\r\n  };\r\n\r\n  //format data to output style\r\n  getWeatherData = (list) => {\r\n    let items = [];\r\n    console.log(\"getWeatherData------:\", list);\r\n    list.forEach((item) => {\r\n      const { dt_txt } = item;\r\n      if (dt_txt.includes(\"00:00:00\")) {//filter date\r\n        // console.log(\"----2--\");\r\n        console.log(\"dt_txt:\", dt_txt); //date 2021-09-04 00:00:00\r\n\r\n        const { main } = item.weather[0];\r\n        console.log(main); //weather Rain\r\n\r\n        const { temp } = item.main;\r\n        console.log(temp); //temp 24.53\r\n\r\n        let dataItem =\r\n        {\r\n          date: this.getDayofWeek(dt_txt),\r\n          weather: main,\r\n          temperature: this.getTemp(temp),\r\n        };\r\n        items.push(dataItem);\r\n      }\r\n    });\r\n\r\n    console.log(\"getWeatherData--items----:\", items);\r\n    return items;\r\n  };\r\n\r\n  getDayofWeek = (date) => {\r\n    // date = \"2021-09-04 00:00:00\";\r\n    let newDate = date.split(\" \");\r\n    let dt = new Date(newDate[0]);\r\n    console.log(\"getDay() : \" + dt.getDay());\r\n\r\n    let days = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"];\r\n    let dayName = days[dt.getDay()];\r\n    console.log(\"dayName() : \" + dayName);\r\n    return dayName;\r\n  };\r\n\r\n  getTemp = (temp1) => {\r\n    // temp1=\"24.53\";\r\n    let temp = parseFloat(temp1);\r\n    let currentTemp = temp.toFixed(1);\r\n    console.log(\"temp : \" + currentTemp);\r\n    return currentTemp;\r\n  };\r\n\r\n  getIcon = (weather) => {\r\n    // console.log(\"weather : \" + weather);\r\n    let dayWeather = weather.toLowerCase();\r\n    // console.log(\"weather2 : \" + dayWeather);\r\n    if (dayWeather.includes(\"rain\")) {\r\n      return <WiRain className=\"dayweather-icons\" />;\r\n    } else if (dayWeather.includes(\"sun\")) {\r\n      return <WiDaySunny className=\"dayweather-icons \" />;\r\n    } else if (dayWeather.includes(\"cloud\")) {\r\n      return <WiDayCloudy className=\"dayweather-icons \" />;\r\n    } else {\r\n      //default weather\r\n      return <WiThunderstorm className=\"dayweather-icons \" />;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"daily_weather--main\" >\r\n        {this.state.dataItemList.map((item, index) => (\r\n          <div className=\"daily_weather--item\" key={index}>\r\n            <h3>{item.date}</h3>\r\n            {this.getIcon(item.weather)}\r\n            <h4>{item.temperature}Â° </h4>\r\n            {/* <h6>{item[1].weather} </h6> */}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default DailyWeather;\r\n","import React, { Component } from 'react'\r\nimport { FaTwitter, FaCircle } from \"react-icons/fa\";\r\nimport { BsFillCaretRightFill } from \"react-icons/bs\";\r\n\r\n\r\nimport \"./TwitterFeed.css\";\r\nexport default class TwitterFeed extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"TwitterFeed cityname:\", props.cityName);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"twitter_feed--main\">\r\n                <div className=\"twitter_feed--header\">\r\n                    <FaTwitter className=\"twitter_feed--logo\" />\r\n                    <h3>Twitter Feed </h3>\r\n                    <span className=\"twitter_feed--city\"> #{this.props.cityName}</span>\r\n                </div>\r\n\r\n                <div className=\"twitter_feed--news\">\r\n                    <div className=\"twitter_feed--item\">\r\n                        <FaCircle className=\"grey-circle\" />\r\n                        <p>Don't forget your sunscreen tomorrow! </p>\r\n                    </div>\r\n                    <div className=\"twitter_feed--item\">\r\n                        <FaCircle className=\"grey-circle\" />\r\n                        <p>Amazing weather in {this.props.cityName}!</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"next-div\">\r\n                    <h4 className=\"next-text\">NEXT</h4>\r\n                    <BsFillCaretRightFill className=\"next-arrow\" />\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n","import { useState } from \"react\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\n\r\nconst SearchBar = (props) => {\r\n    const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n\r\n    const titlesChangeHandler = (e) => {\r\n        setEnteredTitle(e.target.value);\r\n        // console.log(\"handlecitynamechange:\", e.target.value);\r\n    };\r\n\r\n    const submitHandler = (event) => {\r\n        // debugger;\r\n        console.log(\"handleSubmit for city name\")\r\n        event.preventDefault();\r\n        console.log(enteredTitle);\r\n        // setEnteredTitle(\"\");\r\n\r\n        props.onSaveTitleData({ cityName: enteredTitle });//pass value to parent object\r\n    };\r\n\r\n    return (\r\n        <form className=\"search_form\" onSubmit={submitHandler} action=\"#\">\r\n            <BsSearch className=\"search_form--icon\" />\r\n            <input\r\n                type=\"text\"\r\n                value={enteredTitle}\r\n                onChange={titlesChangeHandler}\r\n                placeholder=\"Search by city name\"\r\n            />\r\n            <button type=\"submit\">Search</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default SearchBar;\r\n","import \"./App.css\";\r\n\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nimport CurrentWeather from \"./components/weather/CurrentWeather\";\r\nimport DailyWeather from \"./components/weather/DailyWeather\";\r\nimport TwitterFeed from \"./components/twitter/TwitterFeed\";\r\nimport SearchBar from \"./components/UI/SearchBar\";\r\n\r\nconst App = (props) => {\r\n\r\n  const [city, setCity] = useState(\"Canberra\");\r\n  const SaveDataHandler = (data) => {\r\n    // const expendData = data\r\n    console.log(\"App--get data from input:-----\", data);\r\n    // console.log(data);\r\n    // const { cityName } = data.cityName;\r\n    setCity(data.cityName);\r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"weather-main\">\r\n      <SearchBar onSaveTitleData={SaveDataHandler} />\r\n      <section className=\"container\">\r\n        <CurrentWeather cityName={city} />\r\n\r\n        <div className=\"botom-part\">\r\n          <TwitterFeed cityName={city} />\r\n          <DailyWeather cityName={city} />\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}
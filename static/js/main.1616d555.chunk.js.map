{"version":3,"sources":["components/weather/CurrentWeather.js","components/util/utils.js","components/weather/DailyWeather.js","components/twitter/TwitterFeed.js","components/ui/SearchBar.js","App.js","index.js"],"names":["defaultCity","process","CurrentWeather","props","useState","cityName","setCityName","curentWeatherData","setCurrentWeatherData","useEffect","url","Axios","get","then","response","data","console","log","sortedItems","temperature","main","temp","weather","humidity","speed","wind","getCurrentWeatherData","className","getDayofWeek","date","newDate","split","dt","Date","getDay","dayName","getTemp","temp1","currentTemp","parseFloat","toFixed","DailyWeather","dataItemList","setDataItemList","list","items","forEach","item","dt_txt","includes","dataItem","push","getWeatherData","getFivedaysData","getIcon","dayWeather","toLowerCase","map","index","TwitterFeed","this","Component","SearchBar","enteredTitle","setEnteredTitle","onSubmit","event","preventDefault","onSaveTitleData","action","type","value","onChange","e","target","placeholder","App","city","setCity","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1616d555.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport \"./CurrentWeather.css\";\r\n\r\nconst defaultCity = process.env.REACT_APP_CITY;\r\nconst apiKey = process.env.REACT_APP_APIKEY;\r\nconst units = process.env.REACT_APP_UNIT; //show temperature in C\r\n\r\n\r\nconst CurrentWeather = (props) => {\r\n  const [cityName, setCityName] = useState(defaultCity);\r\n  const [curentWeatherData, setCurrentWeatherData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getCurrentWeatherData = () => {\r\n      let city = defaultCity;\r\n      if (props.cityName) {//exists\r\n        setCityName(props.cityName);\r\n      }\r\n      let url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=${units}`\r\n      // console.log(\"getDataviaAxios--url----:\", url);\r\n      Axios.get(url).then((response) => {\r\n        // handle success\r\n        let data = response.data;\r\n        console.log(data);\r\n\r\n        let sortedItems = {\r\n          temperature: data.main.temp, //get 00.0\r\n          weather: data.weather[0].main,\r\n          humidity: data.main.humidity,\r\n          speed: data.wind.speed\r\n        };\r\n        setCurrentWeatherData(sortedItems);\r\n      });\r\n    };\r\n    getCurrentWeatherData();\r\n  }, [props]);\r\n\r\n\r\n  return (\r\n    <div className=\"current_weather--main\">\r\n      <h3 className=\"current_weather--city\" >\r\n        {cityName}\r\n      </h3>\r\n      <div className=\"current_weather--body\">\r\n        <div className=\"current_weather--temp\">\r\n          <h2 className=\"current_weather--h2\">{curentWeatherData.temperature}Â°</h2>\r\n          <div className=\"current_weather--description\">\r\n            {curentWeatherData.weather}\r\n          </div>\r\n        </div>\r\n        <div className=\"current_weather--hw\">\r\n          <div className=\"current_weather--humidity\">\r\n            <h4>HUMIDITY</h4>\r\n            <span>{curentWeatherData.humidity}%</span>\r\n          </div>\r\n          <div className=\"current_weather--wind\">\r\n            <h4>WIND</h4>\r\n            <span>{curentWeatherData.speed}K/M</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}\r\nexport default CurrentWeather;\r\n","//format data to output style\r\nexport function getWeatherData(list) {\r\n    let items = [];\r\n    console.log(\"getWeatherData------:\", list);\r\n    list.forEach((item) => {\r\n        const { dt_txt } = item;\r\n        if (dt_txt.includes(\"00:00:00\")) {//filter date\r\n            // console.log(\"----2--\");\r\n            console.log(\"dt_txt:\", dt_txt); //date 2021-09-04 00:00:00\r\n\r\n            const { main } = item.weather[0];\r\n            console.log(main); //weather Rain\r\n\r\n            const { temp } = item.main;\r\n            console.log(temp); //temp 24.53\r\n\r\n            let dataItem =\r\n            {\r\n                date: getDayofWeek(dt_txt),\r\n                weather: main,\r\n                temperature: getTemp(temp),\r\n            };\r\n            items.push(dataItem);\r\n        }\r\n    });\r\n\r\n    console.log(\"getWeatherData--items----:\", items);\r\n    return items;\r\n};\r\n\r\nconst getDayofWeek = (date) => {\r\n    // date = \"2021-09-04 00:00:00\";\r\n    let newDate = date.split(\" \");\r\n    let dt = new Date(newDate[0]);\r\n    console.log(\"getDay() : \" + dt.getDay());\r\n\r\n    let days = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"];\r\n    let dayName = days[dt.getDay()];\r\n    console.log(\"dayName() : \" + dayName);\r\n    return dayName;\r\n};\r\n\r\nconst getTemp = (temp1) => {\r\n    // temp1=\"24.53\";\r\n    let temp = parseFloat(temp1);\r\n    let currentTemp = temp.toFixed(1);\r\n    console.log(\"temp : \" + currentTemp);\r\n    return currentTemp;\r\n};\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nimport \"./DailyWeather.css\";\r\nimport { getWeatherData } from \"../util/utils\";\r\n\r\nimport {\r\n  WiRain,\r\n  WiThunderstorm,\r\n  WiDaySunny,\r\n  WiDayCloudy,\r\n} from \"react-icons/wi\";\r\n\r\nconst defaultCity = process.env.REACT_APP_CITY;\r\nconst apiKey = process.env.REACT_APP_APIKEY;\r\nconst units = process.env.REACT_APP_UNIT; //show temperature in C\r\n\r\nconst DailyWeather = (props) => {\r\n  const [cityName, setCityName] = useState(defaultCity);\r\n  const [dataItemList, setDataItemList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getFivedaysData = () => {\r\n      // let city = defaultCity;\r\n      if (props.cityName) {\r\n        //exists\r\n        setCityName(props.cityName);\r\n      }\r\n\r\n      let url = `https://api.openweathermap.org/data/2.5/forecast?q=${cityName}&appid=${apiKey}&units=${units}`;\r\n      console.log(\"getDataviaAxios--url----:\", url);\r\n\r\n      Axios.get(url).then((response) => {\r\n        let data = response.data;\r\n        console.log(\"data:\", data);\r\n        let sortedItems = getWeatherData(data.list);\r\n        setDataItemList(sortedItems);\r\n      });\r\n    };\r\n\r\n    getFivedaysData();\r\n    console.log(\"sortedItems:\", dataItemList);\r\n  }, [props]);\r\n\r\n  const getIcon = (weather) => {\r\n    // console.log(\"weather : \" + weather);\r\n    let dayWeather = weather.toLowerCase();\r\n    // console.log(\"weather2 : \" + dayWeather);\r\n    if (dayWeather.includes(\"rain\")) {\r\n      return <WiRain className=\"dayweather-icons\" />;\r\n    } else if (dayWeather.includes(\"sun\")) {\r\n      return <WiDaySunny className=\"dayweather-icons \" />;\r\n    } else if (dayWeather.includes(\"cloud\")) {\r\n      return <WiDayCloudy className=\"dayweather-icons \" />;\r\n    } else {\r\n      //default weather\r\n      return <WiThunderstorm className=\"dayweather-icons \" />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"daily_weather--main\">\r\n      {dataItemList.map((item, index) => (\r\n        <div className=\"daily_weather--item\" key={index}>\r\n          <h3>{item.date}</h3>\r\n          {getIcon(item.weather)}\r\n          <h4>{item.temperature}Â° </h4>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default DailyWeather;\r\n","import React, { Component } from 'react'\r\nimport { FaTwitter, FaCircle } from \"react-icons/fa\";\r\nimport { BsFillCaretRightFill } from \"react-icons/bs\";\r\n\r\n\r\nimport \"./TwitterFeed.css\";\r\nexport default class TwitterFeed extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"TwitterFeed cityname:\", props.cityName);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"twitter_feed--main\">\r\n                <div className=\"twitter_feed--header\">\r\n                    <FaTwitter className=\"twitter_feed--logo\" />\r\n                    <h3>Twitter Feed </h3>\r\n                    <span className=\"twitter_feed--city\"> #{this.props.cityName}</span>\r\n                </div>\r\n\r\n                <div className=\"twitter_feed--news\">\r\n                    <div className=\"twitter_feed--item\">\r\n                        <FaCircle className=\"grey-circle\" />\r\n                        <p>Don't forget your sunscreen tomorrow! </p>\r\n                    </div>\r\n                    <div className=\"twitter_feed--item\">\r\n                        <FaCircle className=\"grey-circle\" />\r\n                        <p>Amazing weather in {this.props.cityName}!</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"next-div\">\r\n                    <h4 className=\"next-text\">NEXT</h4>\r\n                    <BsFillCaretRightFill className=\"next-arrow\" />\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n","import { useState } from \"react\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\n\r\nconst SearchBar = (props) => {\r\n    const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n\r\n    const titlesChangeHandler = (e) => {\r\n        setEnteredTitle(e.target.value);\r\n        // console.log(\"handlecitynamechange:\", e.target.value);\r\n    };\r\n\r\n    const submitHandler = (event) => {\r\n        // debugger;\r\n        console.log(\"handleSubmit for city name\")\r\n        event.preventDefault();\r\n        console.log(enteredTitle);\r\n        // setEnteredTitle(\"\");\r\n\r\n        props.onSaveTitleData({ cityName: enteredTitle });//pass value to parent object\r\n    };\r\n\r\n    return (\r\n        <form className=\"search_form\" onSubmit={submitHandler} action=\"#\">\r\n            <BsSearch className=\"search_form--icon\" />\r\n            <input\r\n                type=\"text\"\r\n                value={enteredTitle}\r\n                onChange={titlesChangeHandler}\r\n                placeholder=\"Search by city name\"\r\n            />\r\n            <button type=\"submit\">Search</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default SearchBar;\r\n","import \"./App.css\";\r\n\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nimport CurrentWeather from \"./components/weather/CurrentWeather\";\r\nimport DailyWeather from \"./components/weather/DailyWeather\";\r\nimport TwitterFeed from \"./components/twitter/TwitterFeed\";\r\nimport SearchBar from \"./components/ui/SearchBar\";\r\n\r\nconst App = (props) => {\r\n\r\n  const [city, setCity] = useState(\"Canberra\");\r\n  const SaveDataHandler = (data) => {\r\n    // const expendData = data\r\n    console.log(\"App--get data from input:-----\", data);\r\n    // console.log(data);\r\n    // const { cityName } = data.cityName;\r\n    setCity(data.cityName);\r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"weather-main\">\r\n      <SearchBar onSaveTitleData={SaveDataHandler} />\r\n      <section className=\"container\">\r\n        <CurrentWeather cityName={city} />\r\n\r\n        <div className=\"botom-part\">\r\n          <TwitterFeed cityName={city} />\r\n          <DailyWeather cityName={city} />\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}
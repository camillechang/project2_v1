{"version":3,"sources":["components/CurrentWeather.js","components/DailyWeather.js","App.js","index.js"],"names":["url","CurrentWeather","props","getTemp","temp1","currentTemp","parseFloat","toFixed","console","log","state","curentWeatherData","getData","bind","this","fetch","then","response","json","data","weather","main","temp","humidity","speed","wind","sortedItems","setState","className","React","Component","DailyWeather","getWeatherData","list","items","forEach","item","dt_txt","includes","dataItem","date","getDayofWeek","temperature","push","newDate","split","dt","Date","getDay","dayName","getIcon","dayWeather","toLowerCase","dataItemList","length","map","index","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4f39098.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst cityName = \"France\";\r\nconst apiKey = \"0cf172e803d3e760c17228daccbd18a6\";\r\nconst units = \"metric\"; //show temperature in C\r\nconst url = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${apiKey}&units=${units}`;\r\n\r\nclass CurrentWeather extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      curentWeatherData: [],\r\n    };\r\n    this.getData = this.getData.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    fetch(url)\r\n      .then((response) => {\r\n        return response.json(); //this needs return, otherwise undefined\r\n      })\r\n      .then((data) => {\r\n        console.log(typeof data);\r\n        console.log(\"CurrentWeather------\");\r\n        console.log(data);\r\n        //current weather\r\n        const weather = data.weather[0].main;\r\n        console.log(weather);\r\n        //currentTemp\r\n        const temp = this.getTemp(data.main.temp);\r\n        console.log(temp); //get 00.0\r\n        //humidity\r\n        const humidity = data.main.humidity;\r\n        console.log(humidity);\r\n        //wind speed\r\n        const speed = data.wind.speed;\r\n        console.log(speed);\r\n\r\n        let sortedItems = { temp, weather, humidity, speed };\r\n        this.setState({ curentWeatherData: sortedItems });\r\n      });\r\n  }\r\n  getTemp = (temp1) => {\r\n    // temp1=\"24.53\";\r\n    let temp = parseFloat(temp1);\r\n\r\n    let currentTemp = temp.toFixed(1);\r\n    console.log(\"temp : \" + currentTemp);\r\n    return currentTemp;\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"top-part  \">\r\n        <h3 className=\"city-location\">FRANCE</h3>\r\n        <div className=\"today-detail\">\r\n          <div className=\"today-weather\">\r\n            <h2 className=\"today-temp\">{this.state.curentWeatherData.temp}Â°</h2>\r\n            <div className=\"today-temp1\">\r\n              {this.state.curentWeatherData.weather}\r\n            </div>\r\n          </div>\r\n          <div className=\"humidity-wind\">\r\n            <div className=\"humidity\">\r\n              <h4>HUMIDITY</h4>\r\n              <span>{this.state.curentWeatherData.humidity}%</span>\r\n            </div>\r\n            <span className=\"hw-seperated-line\"></span>\r\n            <div className=\"wind\">\r\n              <h4>WIND</h4>\r\n              <span>{this.state.curentWeatherData.speed}K/M</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default CurrentWeather;\r\n","import React from \"react\";\r\nimport \"./DailyWeather.css\";\r\n\r\nimport {\r\n  WiRain,\r\n  WiThunderstorm,\r\n  WiDaySunny,\r\n  WiDayCloudy,\r\n} from \"react-icons/wi\";\r\n\r\nconst cityName = \"France\";\r\nconst apiKey = \"0cf172e803d3e760c17228daccbd18a6\";\r\nconst units = \"metric\"; //show temperature in C\r\nconst url = `https://api.openweathermap.org/data/2.5/forecast?q=${cityName}&appid=${apiKey}&units=${units}`;\r\n\r\nclass DailyWeather extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataItemList: [],\r\n    };\r\n    this.getData = this.getData.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    fetch(url)\r\n      .then((response) => {\r\n        return response.json(); //this needs return, otherwise undefined\r\n      })\r\n      .then((data) => {\r\n        // console.log(data);\r\n        console.log(typeof data);\r\n        console.log(\"length:\", data.list.length);\r\n        let sortedItems = this.getWeatherData(data.list);\r\n\r\n        this.setState({ dataItemList: sortedItems });\r\n      });\r\n  }\r\n\r\n  //format data to output style\r\n  getWeatherData = (list) => {\r\n    let items = [];\r\n    console.log(\"getWeatherData------:\", list);\r\n    list.forEach((item) => {\r\n      if (item.dt_txt.includes(\"00:00:00\")) {\r\n        console.log(item.dt_txt); //date 2021-09-04 00:00:00\r\n        console.log(\"----2--\");\r\n        console.log(item.weather[0].main); //weather Rain\r\n\r\n        console.log(item.main.temp); //temp 24.53\r\n\r\n        const dataItem = [\r\n          { date: this.getDayofWeek(item.dt_txt) },\r\n          { weather: item.weather[0].main },\r\n          { temperature: this.getTemp(item.main.temp) },\r\n        ];\r\n        items.push(dataItem);\r\n      }\r\n    });\r\n    return items;\r\n  };\r\n\r\n  getDayofWeek = (date) => {\r\n    // date = \"2021-09-04 00:00:00\";\r\n    let newDate = date.split(\" \");\r\n    let dt = new Date(newDate[0]);\r\n    console.log(\"getDay() : \" + dt.getDay());\r\n\r\n    let days = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"];\r\n    let dayName = days[dt.getDay()];\r\n    console.log(\"dayName() : \" + dayName);\r\n    return dayName;\r\n  };\r\n\r\n  getTemp = (temp1) => {\r\n    // temp1=\"24.53\";\r\n    let temp = parseFloat(temp1);\r\n\r\n    let currentTemp = temp.toFixed(1);\r\n    console.log(\"temp : \" + currentTemp);\r\n    return currentTemp;\r\n  };\r\n\r\n  getIcon = (weather) => {\r\n    console.log(\"weather : \" + weather);\r\n    let dayWeather = weather.toLowerCase();\r\n    console.log(\"weather2 : \" + dayWeather);\r\n    if (dayWeather.includes(\"rain\")) {\r\n      return <WiRain className=\"dayweather-icons\" />;\r\n    } else if (dayWeather.includes(\"sun\")) {\r\n      return <WiDaySunny className=\"dayweather-icons \" />;\r\n    } else if (dayWeather.includes(\"cloud\")) {\r\n      return <WiDayCloudy className=\"dayweather-icons \" />;\r\n    } else {\r\n      //default weather\r\n      return <WiThunderstorm className=\"dayweather-icons \" />;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"right-part\">\r\n        {this.state.dataItemList.map((item, index) => (\r\n          <div className=\"dayWeather\" key={index}>\r\n            <h3>{item[0].date}</h3>\r\n            {this.getIcon(item[1].weather)}\r\n            <h4>{item[2].temperature}Â° </h4>\r\n            {/* <h6>{item[1].weather} </h6> */}\r\n          </div>\r\n        ))}\r\n\r\n        {/* <div className=\"dayWeather\">\r\n          <h3>MON</h3>\r\n          <WiRaindrops className=\"dayweather-icons\" />\r\n          <h4>9Â°</h4>\r\n          <h6>RAINING</h6>\r\n        </div>\r\n        <div className=\"dayWeather \">\r\n          <h3>TUE</h3>\r\n          <WiDaySunny className=\"dayweather-icons \" />\r\n          <h4>15Â°</h4>\r\n          <h6>SUNNY</h6>\r\n        </div>\r\n        <div className=\"dayWeather  \">\r\n          <h3>WED</h3>\r\n          <WiDayCloudy className=\"dayweather-icons \" />\r\n          <h4>11Â°</h4>\r\n          <h6>CLOUDY</h6>\r\n        </div>\r\n        <div className=\"dayWeather  \">\r\n          <h3>THU</h3>\r\n          <WiThunderstorm className=\"dayweather-icons \" />\r\n          <h4>7Â°</h4>\r\n          <h6>STORM</h6>\r\n        </div>\r\n        <div className=\"dayWeather\">\r\n          <h3>FRI</h3>\r\n          <WiDaySunny className=\"dayweather-icons \" />\r\n          <h4>18Â°</h4>\r\n          <h6>SUNNY</h6>\r\n        </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default DailyWeather;\r\n","import \"./App.css\";\r\n\r\nimport { FaTwitter, FaCircle } from \"react-icons/fa\";\r\nimport { BsFillCaretRightFill } from \"react-icons/bs\";\r\n\r\nimport CurrentWeather from \"./components/CurrentWeather\";\r\nimport DailyWeather from \"./components/DailyWeather\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container\">\r\n      {/* weather detail */}\r\n      <CurrentWeather />\r\n      {/* left twitter feed----- */}\r\n      <div className=\"botom-part\">\r\n        <div className=\"left-part\">\r\n          <div className=\"twitter-feed\">\r\n            <FaTwitter className=\"twitter-logo\" />\r\n            <h3>Twitter Feed </h3>\r\n            <span className=\"cityhashtag\">#France</span>\r\n          </div>\r\n\r\n          <div className=\"twitter-news\">\r\n            <div className=\"twitter-feed-words\">\r\n              <FaCircle className=\"grey-circle\" />\r\n              <p>Don't forget your sunscreen tomorrow! </p>\r\n            </div>\r\n            <div className=\"twitter-feed-words\">\r\n              <FaCircle className=\"grey-circle\" />{\" \"}\r\n              <p>Amazing weather in Paris!</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"next-div\">\r\n            <h4 className=\"next-text\">NEXT</h4>\r\n            <BsFillCaretRightFill className=\"next-arrow\" />\r\n          </div>\r\n        </div>\r\n\r\n        {/* weekly weather */}\r\n        <DailyWeather />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}